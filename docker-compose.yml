version: '3.2'

services:

  web:
    image: nginx:alpine
    container_name: web
    depends_on:
     - app
    ports:
     - "4000:80"
    volumes:
     - ./docker/conf/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - skynet

  app:
    # image: adoptopenjdk/openjdk11:alpine
    image: adoptopenjdk/openjdk11:alpine-jre
    # container_name: app
    command: >
      java -Duser.timezone=GMT+7 -jar /app/demo.war
      --spring.datasource.url=${JDBC_URL}
      --spring.datasource.username=${DB_USERNAME}
      --spring.datasource.password=${DB_PASSWORD}
    # command: java -Duser.timezone=GMT+7 -jar /app/demo.war --spring.datasource.url=${JDBC_URL} --spring.datasource.username=${DB_USERNAME} --spring.datasource.password=${DB_PASSWORD}
    restart: always
    depends_on:
     - db
    volumes:
     - ./target/demo.war:/app/demo.war
    scale: 1
    networks:
     - skynet

  # tomcat:
  #   image: tomcat:9-jdk11-openjdk-slim
  #   container_name: tomcat
  #   entrypoint: ["echo", "Service tomcat disabled"]
  #   # command: java -version
  #   env_file:
  #    - ./docker/env/tomcat.env
  #   ports: 
  #    - 9080:8080
  #   volumes:
  #    - ./target/demo.war:/usr/local/tomcat/webapps/demo.war:ro
  #   networks:
  #    - skynet

  db:
    # image: mysql:5.7
    image: mysql:8
    container_name: db
    # entrypoint: ["echo", "Service db disabled"]
    # restart: always
    # env_file:
    #   - ./docker/env/db.env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_INITDB_SKIP_TZINFO: 1
      TZ: Asia/Bangkok
    ports:
    # connect from host: mysql -P 4306 --protocol=tcp -u root -p
     - 4306:3306
    volumes:
     - ./docker/db/data:/var/lib/mysql:delegated
    #  - ./docker/db/conf/my.conf:/etc/mysql/my.cnf:ro
    #  - ./docker/db/init:/docker-entrypoint-initdb.d:ro
    #  - ./docker/db/log:/var/log/mysql:delegated
    networks:
      skynet:
        aliases:
          - mysql

networks:
  skynet:
    name: skynet
    driver: bridge
